{"version":3,"file":"static/js/408.f6c4ae1b.chunk.js","mappings":"oSAEMA,EAAW,gCACXC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAmB,mCAAG,6GAERD,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBC,IAHb,cAEzBG,EAFyB,yBAKxBA,EAASC,KAAKC,SALU,gCAO/BC,QAAQC,IAAR,MAP+B,yDAAH,qDAWnBC,EAAiB,mCAAG,WAAMC,GAAN,gGAENR,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAU,EADA,oBACcT,IAHR,cAEvBG,EAFuB,yBAKtBA,EAASC,MALa,gCAO7BE,QAAQC,IAAR,MAP6B,yDAAH,sDAWjBG,EAAS,mCAAG,WAAMD,GAAN,gGAEER,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAU,EADA,4BACsBT,IAHxB,cAEfG,EAFe,yBAKdA,EAASC,KAAKO,MALA,gCAOrBL,QAAQC,IAAR,MAPqB,yDAAH,sDAWTK,EAAY,mCAAG,WAAMH,GAAN,uFACHR,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAU,EADA,4BACsBT,IAFnB,cACpBG,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAOZQ,EAAkB,mCAAG,WAAMC,GAAN,uFACTb,EAAAA,EAAAA,IAAA,gBAA2B,CAChDc,OAAQ,CACNC,QAAShB,EACTc,MAAAA,KAJ4B,cAC1BX,EAD0B,yBAOzBA,EAASC,KAAKC,SAPW,2CAAH,qD,iHCgB/B,UA1DmB,WACjB,OAA4BY,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,mBAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCL,EAAAA,EAAAA,UAAS,IAA7C,eAAOM,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAKN,EAAaO,IAAI,SAuB5B,OAVAC,EAAAA,EAAAA,YAAU,WACR,GAAW,KAAPF,EAAJ,CACAH,EAAa,OAACG,QAAD,IAACA,EAAAA,EAAM,IACpB,IAAMG,EAAW,mCAAG,WAAMH,GAAN,wFACOd,EAAAA,EAAAA,IAAmBc,GAD1B,OACZI,EADY,OAElBZ,EAAUY,GAFQ,2CAAH,sDAIjBD,EAAYH,EANS,CAOtB,GAAE,CAACA,KAGF,iCACE,gBAAKK,MAAO,CAAEC,OAAQ,QAAtB,UACE,kBAAMC,SAnBW,SAAAC,GAErB,GADAA,EAAEC,iBACiB,KAAfb,EAAmB,OAAOc,MAAM,wBACpCf,EAAgB,CAAER,MAAOS,GAC1B,EAeK,WACE,kBACEe,KAAK,OACLC,MAAOhB,EACPiB,SA5Ba,SAAAL,GACrB,IAAMI,EAAQJ,EAAEM,OAAOF,MAAMG,OAC7BlB,EAAce,EACf,EA0BSP,MAAO,CAAEW,MAAO,YAElB,mBAAQL,KAAK,SAASN,MAAO,CAAEY,OAAQ,WAAvC,0BAMJ,wBACG1B,EAAO2B,KAAI,gBAAGpC,EAAH,EAAGA,GAAIqC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,EAAAC,KAAD,CAAMC,GAAE,UAAKvC,GAAMwC,MAAO,CAAEC,KAAMzB,GAAlC,SACGqB,KAFIrC,EADC,QAUnB,C","sources":["helpers/Fetch.js","pages/MoviesPage.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'e921f15ae860f6e4269e7dedfe9b8c39';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCast = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n  return response.data.results;\n};\n","import { fetchMoviesByQuery } from 'helpers/Fetch';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState('');\n  const location = useLocation();\n\n  const sp = searchParams.get('query');\n\n  const onHandleChange = e => {\n    const value = e.target.value.trim();\n    setInputValue(value);\n  };\n\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    if (inputValue === '') return alert('Please enter request');\n    setSearchParams({ query: inputValue });\n  };\n\n  useEffect(() => {\n    if (sp === '') return;\n    setInputValue(sp ?? '');\n    const fetchMovies = async sp => {\n      const moviesList = await fetchMoviesByQuery(sp);\n      setMovies(moviesList);\n    };\n    fetchMovies(sp);\n  }, [sp]);\n\n  return (\n    <>\n      <div style={{ margin: '10px' }}>\n        <form onSubmit={onHandleSubmit}>\n          <input\n            type=\"text\"\n            value={inputValue}\n            onChange={onHandleChange}\n            style={{ width: '300px' }}\n          />\n          <button type=\"submit\" style={{ cursor: 'pointer' }}>\n            Search\n          </button>\n        </form>\n      </div>\n\n      <ul>\n        {movies.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["BASE_URL","API_KEY","axios","fetchTrendingMovies","response","data","results","console","log","fetchMovieDetails","id","fetchCast","cast","fetchReviews","fetchMoviesByQuery","query","params","api_key","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","inputValue","setInputValue","location","useLocation","sp","get","useEffect","fetchMovies","moviesList","style","margin","onSubmit","e","preventDefault","alert","type","value","onChange","target","trim","width","cursor","map","title","Link","to","state","from"],"sourceRoot":""}