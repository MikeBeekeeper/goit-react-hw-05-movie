{"version":3,"file":"static/js/787.5d26eaec.chunk.js","mappings":"oLAgCA,UA5BgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAPAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAASI,MAAK,SAAAC,GACN,IAAfA,EAAIC,QAAcP,EAAW,MAC7BM,EAAIC,OAAS,GAAGP,EAAWM,EAChC,GACF,GAAE,CAACL,KAGF,iCACIF,IAAW,uEACZA,IACC,wBACGA,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,2BACE,oCAAYF,MACZ,uBAAIC,MAFGC,EADE,QAUtB,C,8LC5BKC,EAAW,gCACXC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAmB,mCAAG,6GAERD,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBC,IAHb,cAEzBG,EAFyB,yBAKxBA,EAASC,KAAKC,SALU,gCAO/BC,QAAQC,IAAR,MAP+B,yDAAH,qDAWnBC,EAAiB,mCAAG,WAAMV,GAAN,gGAENG,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAD,EADA,oBACcE,IAHR,cAEvBG,EAFuB,yBAKtBA,EAASC,MALa,gCAO7BE,QAAQC,IAAR,MAP6B,yDAAH,sDAWjBE,EAAS,mCAAG,WAAMX,GAAN,gGAEEG,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAD,EADA,4BACsBE,IAHxB,cAEfG,EAFe,yBAKdA,EAASC,KAAKM,MALA,gCAOrBJ,QAAQC,IAAR,MAPqB,yDAAH,sDAWThB,EAAY,mCAAG,WAAMO,GAAN,uFACHG,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAD,EADA,4BACsBE,IAFnB,cACpBG,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAOZM,EAAkB,mCAAG,WAAMC,GAAN,uFACTX,EAAAA,EAAAA,IAAA,gBAA2B,CAChDY,OAAQ,CACNC,QAASd,EACTY,MAAAA,KAJ4B,cAC1BT,EAD0B,yBAOzBA,EAASC,KAAKC,SAPW,2CAAH,qD","sources":["components/reviews/Reviews.js","helpers/Fetch.js"],"sourcesContent":["import { fetchReviews } from 'helpers/Fetch';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchReviews(movieId).then(res => {\n      if (res.length === 0) setReviews(null);\n      if (res.length > 0) setReviews(res);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {!reviews && <div>We don't have any reviews for this cinema</div>}\n      {reviews && (\n        <ul>\n          {reviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <p>Author: {author}</p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'e921f15ae860f6e4269e7dedfe9b8c39';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCast = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n  return response.data.results;\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetchReviews","then","res","length","map","author","content","id","BASE_URL","API_KEY","axios","fetchTrendingMovies","response","data","results","console","log","fetchMovieDetails","fetchCast","cast","fetchMoviesByQuery","query","params","api_key"],"sourceRoot":""}